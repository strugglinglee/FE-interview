(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{406:function(t,v,_){"use strict";_.r(v);var l=_(56),e=Object(l.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"数组相关问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组相关问题"}},[t._v("#")]),t._v(" 数组相关问题")]),t._v(" "),_("h2",{attrs:{id:"数组的常用方法有哪些"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组的常用方法有哪些"}},[t._v("#")]),t._v(" 数组的常用方法有哪些？")]),t._v(" "),_("h3",{attrs:{id:"操作方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#操作方法"}},[t._v("#")]),t._v(" 操作方法")]),t._v(" "),_("ul",[_("li",[t._v("增\n"),_("blockquote",[_("p",[t._v("除了concat不会对原数组产生影响，其他都会产生影响")])]),t._v(" "),_("ul",[_("li",[t._v("push()\n添加到数组尾部，返回数组长度")]),t._v(" "),_("li",[t._v("unshift()\n在数组开头添加任意多个值，然后返回新的数组长度")]),t._v(" "),_("li",[t._v("splice()\n三个参数，分别是开始位置、0（要删除的元素数量）、插入的元素，返回空数组")]),t._v(" "),_("li",[t._v("concat()\n会创建一个当前数组的副本，然后再把它的参数添加到副本末尾，最后返回这个新构建的数组，不会影响原始数组")])])]),t._v(" "),_("li",[t._v("删\n"),_("blockquote",[_("p",[t._v("除了slice不会对原数组产生影响，其他都会产生影响")])]),t._v(" "),_("ul",[_("li",[t._v("pop()\n用于删除数组的最后一项，同时减少数组的length 值，返回被删除的项")]),t._v(" "),_("li",[t._v("shift()\n用于删除数组的第一项，同时减少数组的length 值，返回被删除的项")]),t._v(" "),_("li",[t._v("splice()\n传入两个参数，分别是开始位置，删除元素的数量，返回包含删除元素的数组")]),t._v(" "),_("li",[t._v("slice()\n创建一个包含原有数组中一个或多个元素的新数组，不会影响原始数组")])])]),t._v(" "),_("li",[t._v("改\n"),_("ul",[_("li",[t._v("splice()\n传入三个参数，分别是开始位置，要删除元素的数量，要插入的任意多个元素，返回删除元素的数组，对原数组产生影响")])])]),t._v(" "),_("li",[t._v("查\n"),_("ul",[_("li",[t._v("indexOf()\n返回要查找的元素在数组中的位置，如果没找到则返回 -1")]),t._v(" "),_("li",[t._v("includes()\n返回要查找的元素在数组中的位置，找到返回true，否则false")]),t._v(" "),_("li",[t._v("find()\n返回第一个匹配的元素")])])])]),t._v(" "),_("h3",{attrs:{id:"排序方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#排序方法"}},[t._v("#")]),t._v(" 排序方法")]),t._v(" "),_("ul",[_("li",[t._v("reverse()\n将数组元素方向反转")]),t._v(" "),_("li",[t._v("sort()\n接受一个比较函数，用于判断哪个值应该排在前面")])]),t._v(" "),_("h3",{attrs:{id:"转换方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#转换方法"}},[t._v("#")]),t._v(" 转换方法")]),t._v(" "),_("ul",[_("li",[t._v("join()\n方法接收一个参数，即字符串分隔符，返回包含所有项的字符串")])]),t._v(" "),_("h3",{attrs:{id:"迭代方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#迭代方法"}},[t._v("#")]),t._v(" 迭代方法")]),t._v(" "),_("ul",[_("li",[t._v("some()\n对数组每一项都运行传入的函数，如果有一项函数返回 true ，则这个方法返回 true")]),t._v(" "),_("li",[t._v("every()\n对数组每一项都运行传入的函数，如果对每一项函数都返回 true ，则这个方法返回 true")]),t._v(" "),_("li",[t._v("forEach()\n对数组每一项都运行传入的函数，没有返回值")]),t._v(" "),_("li",[t._v("filter()\n对数组每一项都运行传入的函数，函数返回 true 的项会组成数组之后返回")]),t._v(" "),_("li",[t._v("map()\n对数组每一项都运行传入的函数，返回由每次函数调用的结果构成的数组")])])])}),[],!1,null,null,null);v.default=e.exports}}]);