(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{421:function(e,t,r){"use strict";r.r(t);var o=r(56),l=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"vue3相关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue3相关"}},[e._v("#")]),e._v(" vue3相关")]),e._v(" "),r("h2",{attrs:{id:"你知道vue3-x响应式数据原理吗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#你知道vue3-x响应式数据原理吗"}},[e._v("#")]),e._v(" 你知道Vue3.x响应式数据原理吗？")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("Vue3.x改用Proxy替代Object.defineProperty")]),e._v("。")]),e._v(" "),r("li",[e._v("因为Proxy可以直接监听对象和数组的变化，并且有多达13种拦截方法。并且作为新标准将受到浏览器厂商重点持续的性能优化。")]),e._v(" "),r("li",[e._v("Proxy只会代理对象的第一层，Vue3是怎样处理这个问题的呢？\n"),r("ul",[r("li",[e._v("判断当前Reflect.get的返回值是否为Object，如果是则再通过reactive方法做代理， 这样就实现了深度观测。")]),e._v(" "),r("li",[e._v("监测数组的时候可能触发多次get/set，那么如何防止触发多次呢？我们可以判断key是否为当前被代理对象target自身属性，也可以判断旧值与新值是否相等，只有满足以上两个条件之一时，才有可能执行trigger。")])])])]),e._v(" "),r("h2",{attrs:{id:"proxy-与-object-defineproperty-优劣对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#proxy-与-object-defineproperty-优劣对比"}},[e._v("#")]),e._v(" Proxy 与 Object.defineProperty 优劣对比")]),e._v(" "),r("ul",[r("li",[e._v("Proxy 的优势如下:\n"),r("ul",[r("li",[e._v("Proxy 可以直接监听对象而非属性；")])])]),e._v(" "),r("li",[e._v("Proxy 可以直接监听数组的变化；\n"),r("ul",[r("li",[e._v("Proxy 有多达 13 种拦截方法,不限于 apply、ownKeys、deleteProperty、has 等等是 Object.defineProperty 不具备的；")]),e._v(" "),r("li",[e._v("Proxy 返回的是一个新对象,我们可以只操作新的对象达到目的,而 Object.defineProperty 只能遍历对象属性直接修改；")]),e._v(" "),r("li",[e._v("Proxy 作为新标准将受到浏览器厂商重点持续的性能优化，也就是传说中的新标准的性能红利；")])])]),e._v(" "),r("li",[e._v("Object.defineProperty 的优势如下:\n"),r("ul",[r("li",[e._v("兼容性好，支持 IE9，而 Proxy 的存在浏览器兼容性问题,而且无法用 polyfill 磨平，因此 Vue 的作者才声明需要等到下个大版本( 3.0 )才能用 Proxy 重写。")])])])])])}),[],!1,null,null,null);t.default=l.exports}}]);